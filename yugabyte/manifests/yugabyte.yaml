---
# Source: yugabyte/templates/service.yaml
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: yugabyte-tls-client-cert
#   namespace: "h2"
#   labels:    
#     heritage: "Helm"
#     release: "yugabytedb"
#     chart: "yugabyte"
#     component: "yugabytedb"
# type: Opaque
# data:
#   root.crt: xxx
#   yugabytedb.crt: yyy
#   yugabytedb.key: zzz
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yugabyte-tls-client-cert
spec:
  # Secret names are always required.
  secretName: yugabyte-tls-client-cert
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  usages:
    - client auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  dnsNames:
    - yugabyte
  # Issuer references are always required.
  issuerRef:
    name: in-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---    
# Source: yugabyte/templates/service.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: yb-master-yugabyte-tls-cert
#   namespace: "h2"
#   labels:    
#     app: "yb-master"    
#     heritage: "Helm"
#     release: "yugabytedb"
#     chart: "yugabyte"
#     component: "yugabytedb"
# type: Opaque
# data:
#   node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.crt: xxx
#   node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.key: yyy
#   ca.crt: zzz
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yb-master-yugabyte-tls-cert
spec:
  # Secret names are always required.
  secretName: yb-master-yugabyte-tls-cert
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  usages:
    - client auth
    - server auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  dnsNames:
    - yb-master-0.yb-masters.h2.svc.cluster.local
    - yb-master-0.yb-masters.h2
    - yb-master-0.yb-masters.h2.svc.cluster.${cluster}    
  # Issuer references are always required.
  issuerRef:
    name: in-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---    
# Source: yugabyte/templates/service.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: yb-tserver-yugabyte-tls-cert
#   namespace: "h2"
#   labels:    
#     app: "yb-tserver"    
#     heritage: "Helm"
#     release: "yugabytedb"
#     chart: "yugabyte"
#     component: "yugabytedb"
# type: Opaque
# data:
#   node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.crt: yyy
#   node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.key: xxx
#   ca.crt: zzz
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yb-tserver-yugabyte-tls-cert
spec:
  # Secret names are always required.
  secretName: yb-tserver-yugabyte-tls-cert
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  usages:
    - client auth
    - server auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  dnsNames:
    - yb-tserver-0.yb-tservers.h2.svc.cluster.local
    - yb-tserver-0.yb-tservers.h2
    - yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}    
  # Issuer references are always required.
  issuerRef:
    name: in-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: yugabyte/templates/debug_config_map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yugabytedb-master-hooks
  namespace: "h2"
data:
  yb-master-0-pre_debug_hook.sh: "echo 'hello-from-pre' " 
  yb-master-0-post_debug_hook.sh: "echo 'hello-from-post' "
---
# Source: yugabyte/templates/debug_config_map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yugabytedb-tserver-hooks
  namespace: "h2"
data:
  yb-tserver-0-pre_debug_hook.sh: "echo 'hello-from-pre' " 
  yb-tserver-0-post_debug_hook.sh: "echo 'hello-from-post' "
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-masters"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 7000
    - name: "tcp-rpc-port"
      port: 7100
    - name: "yugabyted-ui"
      port: 15433
  selector:    
    app: "yb-master"
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-master-ui"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "endpoint"
spec:
  ports:
    - name: "http-ui"
      port: 7000
  selector:    
    app: "yb-master"
  type: ClusterIP
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-tservers"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 9000
    - name: "http-ycql-met"
      port: 12000
    - name: "http-yedis-met"
      port: 11000
    - name: "http-ysql-met"
      port: 13000
    - name: "tcp-rpc-port"
      port: 9100
    - name: "tcp-yedis-port"
      port: 6379
    - name: "tcp-yql-port"
      port: 9042
    - name: "tcp-ysql-port"
      port: 5433
    - name: "yugabyted-ui"
      port: 15433
  selector:    
    app: "yb-tserver"
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-tserver-service"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "endpoint"
spec:
  ports:
    - name: "tcp-yedis-port"
      port: 6379
    - name: "tcp-yql-port"
      port: 9042
    - name: "tcp-ysql-port"
      port: 5433
  selector:    
    app: "yb-tserver"
  type: ClusterIP
---
# Source: yugabyte/templates/service.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-master"
  namespace: "h2"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-masters"
  podManagementPolicy: Parallel
  
  replicas: 1
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:      
      app: "yb-master"
  template:
    metadata:
      annotations:
        checksum/rootCA: 90ace38c3efb4bf1768630295603f06eb0c140b0384c0860e28e0ad1d4dd6a44
      labels:        
        app: "yb-master"        
        heritage: "Helm"
        release: "yugabytedb"
        chart: "yugabyte"
        component: "yugabytedb"
        yugabytedUi: "true"
    spec: # yb-masters
      terminationGracePeriodSeconds: 300
      containers:
      - name: "yb-master"
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "bash"
                - "-c"
                - >
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        # livenessProbe:
        #   exec:
        #     command:
        #     - bash
        #     - -v
        #     - -c
        #     - |
        #       echo "disk check at: $(date)" \
        #         | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
        #         && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check";
        #       exit_code="$?";
        #       echo "disk check exited with: ${exit_code}";
        #       exit "${exit_code}"
        #   failureThreshold: 3
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: "2"
            memory: 2Gi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            echo starting
            sleep 30 || true             
            echo after sleep
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              /home/yugabyte/tools/k8s_preflight.py all
            fi && \
            echo "disk check at: $(date)" \
              | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
              && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster}" \
                --port="7100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster}:7100" \
                --port="7100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="0.0.0.0" \
                --port="7000"
            fi && \
            
            if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
              k8s_parent="/home/yugabyte/tools/k8s_parent.py"
            else
              k8s_parent=""
            fi && \
            echo after checks
            exec ${k8s_parent} /home/yugabyte/bin/yb-master \
              --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
              --master_addresses=yb-master-0.yb-masters.h2.svc.cluster.cluster1:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster2:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster3:7100 \
              --replication_factor=3 \
              --enable_ysql=true \
              --metric_node_name=$(HOSTNAME) \
              --memory_limit_hard_bytes=1824522240 \
              --stderrthreshold=0 \
              --num_cpus=2 \
              --undefok=num_cpus,enable_ysql \
              --default_memory_limit_to_ram_ratio="0.85" \
              --leader_failure_max_missed_heartbeat_periods="10" \
              --placement_cloud="laptop" \
              --placement_region="${cluster}" \
              --certs_dir=/opt/certs/yugabyte \
              --use_node_to_node_encryption=true \
              --allow_insecure_connections=false \
              --rpc_bind_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster} \
              --server_broadcast_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster}:7100 \
              --webserver_interface=0.0.0.0 \
              --master_enable_metrics_snapshotter=true \
              --metrics_snapshotter_tserver_metrics_whitelist=handler_latency_yb_tserver_TabletServerService_Read_count,handler_latency_yb_tserver_TabletServerService_Write_count,handler_latency_yb_tserver_TabletServerService_Read_sum,handler_latency_yb_tserver_TabletServerService_Write_sum,disk_usage,cpu_usage,node_up
        ports:
          - containerPort: 7000
            name: "http-ui"
          - containerPort: 7100
            name: "tcp-rpc-port"
          - containerPort: 15433
            name: "yugabyted-ui"
        volumeMounts:
          - name: debug-hooks-volume
            mountPath: /opt/debug_hooks_config
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: yb-master-yugabyte-tls-cert
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true
      - name: yb-cleanup
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - >
            while true; do
              sleep 3600;
              /home/yugabyte/scripts/log_cleanup.sh;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data
          - name: datadir0
            mountPath: /var/yugabyte/cores
            subPath: cores
      - name: yugabyted-ui
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            while true; do
            /home/yugabyte/bin/yugabyted-ui \
              -database_host=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster} \
              -bind_address=0.0.0.0 \
              -ysql_port=5433 \
              -ycql_port=9042 \
              -master_ui_port=7000 \
              -tserver_ui_port=9000 \
              -secure=true \
            || echo "ERROR: yugabyted-ui failed. This might be because your yugabyte \
            version is older than 2.21.0. If this is the case, set yugabytedUi.enabled to false \
            in helm to disable yugabyted-ui, or upgrade to a version 2.21.0 or newer."; \
            echo "Attempting restart in 30s."
            trap break TERM INT; \
            sleep 30s & wait; \
            trap - TERM INT;
            done \
      initContainers:
      - name: "certs-config"
        image: ubuntu:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: certs
          mountPath: /certs-0
        - name: yb-master-yugabyte-tls-cert
          mountPath: /certs                      
        command:
        - bash
        - -c
        - |
          cp /certs-0/tls.key /certs/node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.key
          chmod 0600 /certs/node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.key
          cp /certs-0/tls.crt /certs/node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.crt
          cp /certs-0/ca.crt /certs/ca.crt       
      volumes:
        - name: debug-hooks-volume
          configMap:
            name: yugabytedb-master-hooks
            defaultMode: 0755
        - name: certs
          secret:
            secretName: yb-master-yugabyte-tls-cert
            defaultMode: 256        
        - name: yb-master-yugabyte-tls-cert
          emptyDir: {}
        - name: yugabyte-tls-client-cert
          secret:
            secretName: yugabyte-tls-client-cert
            defaultMode: 256
---
# Source: yugabyte/templates/service.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-tserver"
  namespace: "h2"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-tservers"
  podManagementPolicy: Parallel
  
  replicas: 1
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:      
      app: "yb-tserver"
  template:
    metadata:
      annotations:
        checksum/rootCA: 90ace38c3efb4bf1768630295603f06eb0c140b0384c0860e28e0ad1d4dd6a44
      labels:        
        app: "yb-tserver"        
        heritage: "Helm"
        release: "yugabytedb"
        chart: "yugabyte"
        component: "yugabytedb"
        yugabytedUi: "true"
    spec: # yb-tservers
      terminationGracePeriodSeconds: 300
      containers:
      - name: "yb-tserver"
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "bash"
                - "-c"
                - >
                  echo starting
                  sleep 30 || true             
                  echo after sleep                
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        livenessProbe:
          exec:
            command:
            - bash
            - -v
            - -c
            - |
              echo "disk check at: $(date)" \
                | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
                && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check";
              exit_code="$?";
              echo "disk check exited with: ${exit_code}";
              exit "${exit_code}"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        
        - name: SSL_CERTFILE
          value: /root/.yugabytedb/root.crt
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: "2"
            memory: 4Gi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              /home/yugabyte/tools/k8s_preflight.py all
            fi && \
            echo "disk check at: $(date)" \
              | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
              && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}" \
                --port="9100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}:9100" \
                --port="9100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="0.0.0.0" \
                --port="9000"
            fi && \
            
            if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
              k8s_parent="/home/yugabyte/tools/k8s_parent.py"
            else
              k8s_parent=""
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}" \
                --port="9042"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="0.0.0.0:5433" \
                --port="5433"
            fi && \
            
            exec ${k8s_parent} /home/yugabyte/bin/yb-tserver \
              --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
              --tserver_master_addrs=yb-master-0.yb-masters.h2.svc.cluster.cluster1:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster2:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster3:7100 \
              --metric_node_name=$(HOSTNAME) \
              --memory_limit_hard_bytes=3649044480 \
              --stderrthreshold=0 \
              --num_cpus=2 \
              --undefok=num_cpus,enable_ysql \
              --use_node_hostname_for_local_tserver=true \
              --leader_failure_max_missed_heartbeat_periods="10" \
              --placement_cloud="laptop" \
              --placement_region="${cluster}" \
              --certs_dir=/opt/certs/yugabyte \
              --use_node_to_node_encryption=true \
              --allow_insecure_connections=false \
              --use_client_to_server_encryption=true \
              --certs_for_client_dir=/opt/certs/yugabyte \
              --rpc_bind_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster} \
              --server_broadcast_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}:9100 \
              --webserver_interface=0.0.0.0 \
              --enable_ysql=true \
              --pgsql_proxy_bind_address=0.0.0.0:5433 \
              --cql_proxy_bind_address=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster} \
              --tserver_enable_metrics_snapshotter=true \
              --metrics_snapshotter_interval_ms=11000 \
              --metrics_snapshotter_tserver_metrics_whitelist=handler_latency_yb_tserver_TabletServerService_Read_count,handler_latency_yb_tserver_TabletServerService_Write_count,handler_latency_yb_tserver_TabletServerService_Read_sum,handler_latency_yb_tserver_TabletServerService_Write_sum,disk_usage,cpu_usage,node_up
        ports:
          - containerPort: 9000
            name: "http-ui"
          - containerPort: 12000
            name: "http-ycql-met"
          - containerPort: 11000
            name: "http-yedis-met"
          - containerPort: 13000
            name: "http-ysql-met"
          - containerPort: 9100
            name: "tcp-rpc-port"
          - containerPort: 6379
            name: "tcp-yedis-port"
          - containerPort: 9042
            name: "tcp-yql-port"
          - containerPort: 5433
            name: "tcp-ysql-port"
          - containerPort: 15433
            name: "yugabyted-ui"
        volumeMounts:
          - name: tserver-tmp
            mountPath: /tmp
          - name: debug-hooks-volume
            mountPath: /opt/debug_hooks_config
          
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: yb-tserver-yugabyte-tls-cert
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true
      - name: yb-cleanup
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - >
            while true; do
              sleep 3600;
              /home/yugabyte/scripts/log_cleanup.sh;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data
          - name: datadir0
            mountPath: /var/yugabyte/cores
            subPath: cores
      - name: yugabyted-ui
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            while true; do
            /home/yugabyte/bin/yugabyted-ui \
              -database_host=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster} \
              -bind_address=0.0.0.0 \
              -ysql_port=5433 \
              -ycql_port=9042 \
              -master_ui_port=7000 \
              -tserver_ui_port=9000 \
              -secure=true \
            || echo "ERROR: yugabyted-ui failed. This might be because your yugabyte \
            version is older than 2.21.0. If this is the case, set yugabytedUi.enabled to false \
            in helm to disable yugabyted-ui, or upgrade to a version 2.21.0 or newer."; \
            echo "Attempting restart in 30s."
            trap break TERM INT; \
            sleep 30s & wait; \
            trap - TERM INT;
            done \
      initContainers:
      - name: "certs-config"
        image: ubuntu:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: certs
          mountPath: /certs-0
        - name: client-certs
          mountPath: /client-certs-0
        - name: yugabyte-tls-client-cert
          mountPath: /client-certs                    
        - name: yb-tserver-yugabyte-tls-cert
          mountPath: /certs                      
        command:
        - bash
        - -c
        - |
          cp /certs-0/tls.key /certs/node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.key
          chmod 0600 /certs/node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.key
          cp /certs-0/tls.crt /certs/node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.crt
          cp /certs-0/ca.crt /certs/ca.crt
          cp /client-certs-0/tls.key /client-certs/yugabyte.key
          chmod 0600 /client-certs/yugabyte.key
          cp /client-certs-0/tls.crt /client-certs/yugabyte.crt
          cp /client-certs-0/ca.crt /client-certs/root.crt          
      volumes:
        - name: debug-hooks-volume
          configMap:
            name: yugabytedb-tserver-hooks
            defaultMode: 0755
        - name: tserver-tmp
          emptyDir: {}
        - name: certs
          secret:
            secretName: yb-tserver-yugabyte-tls-cert
            defaultMode: 256
        - name: client-certs
          secret:
            secretName: yugabyte-tls-client-cert
            defaultMode: 256                    
        - name: yb-tserver-yugabyte-tls-cert
          emptyDir: {}
        - name: yugabyte-tls-client-cert
          emptyDir: {}
---
# Source: yugabyte/templates/secrets.yaml
# Create secrets from other namespaces for masters.
---
# Source: yugabyte/templates/secrets.yaml
# Create secrets from other namespaces for tservers.
---
# Source: yugabyte/templates/service.yaml
---
